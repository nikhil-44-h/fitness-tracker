name: CI/CD - Fitness Tracker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend:
    name: Build Frontend
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: fitness-tracker-frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Build frontend
        run: npm run build

      - name: Save frontend build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: fitness-tracker-frontend/dist

  backend:
    name: Build Backend
    runs-on: ubuntu-latest
    needs: frontend

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: fitdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    defaults:
      run:
        working-directory: fitness-tracker-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build backend
        run: mvn clean package -DskipTests

      - name: Run backend tests
        run: mvn test

      - name: Save backend JAR
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: fitness-tracker-backend/target/*.jar

  docker:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: [frontend, backend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download frontend build
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: fitness-tracker-frontend/dist

      - name: Download backend JAR
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
          path: fitness-tracker-backend/target

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Frontend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/fitness-frontend:latest ./fitness-tracker-frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/fitness-frontend:latest

      - name: Build & Push Backend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/fitness-backend:latest ./fitness-tracker-backend
          docker push ${{ secrets.DOCKER_USERNAME }}/fitness-backend:latest
